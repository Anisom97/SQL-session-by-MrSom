
CREATE VIEW RETURNS_ANALYSIS_TABLE AS
WITH LOYALTY AS (
				 SELECT A.AMP_ID, A.TIER_NAME FROM (
													 SELECT *
															, ROW_NUMBER() OVER (PARTITION BY AMP_ID ORDER BY LAST_ACTIVITY_DATE DESC) AS LOYALTY_ROW_NUM 
													 FROM CUST_360_INFO_V1
												    ) A
				 WHERE A.LOYALTY_ROW_NUM = 1
				 ),

CUSTSEG AS (SELECT DISTINCT A.AMPERITY_ID
					, COALESCE (CR.SEGMENT,C.CUSTOMER_SEGMENTS) AS CUSTOMER_SEG
					FROM TRANSACTION_V1 A
					LEFT JOIN CUST_360_INFO_V1 C
					ON A.AMPERITY_ID=C.AMP_ID
					LEFT JOIN CUSTSEGROLL_V1 CR
					ON CR.AMPERITY_ID=A.AMPERITY_ID
			)

SELECT T.AMPERITY_ID
		, C.CUSTOMER_SEG
		, L.TIER_NAME
		, MONTH(T.ORDER_DATETIME) AS MONTH_NUM
		, ISNULL(SUM(ABS(CASE WHEN T.IS_RETURN='FALSE' AND T.IS_CANCELLATION='FALSE' THEN T.ITEM_REVENUE END)),0) AS GROSS_SALES
		, ISNULL(SUM(ABS(CASE WHEN T.IS_RETURN='TRUE' AND T.IS_CANCELLATION='FALSE' THEN T.ITEM_REVENUE END)),0) AS GROSS_RETURNS
		, ISNULL(SUM(ABS(CASE WHEN T.IS_RETURN='FALSE' AND T.IS_CANCELLATION='FALSE' THEN T.ITEM_QUANTITY END)),0) AS GROSS_ITEMS_ORDERED
		, ISNULL(SUM(ABS(CASE WHEN T.IS_RETURN='TRUE' AND T.IS_CANCELLATION='FALSE' THEN T.ITEM_QUANTITY END)),0) AS GROSS_ITEMS_RETURNED
		FROM TRANSACTION_V1 T
		LEFT JOIN LOYALTY L
		ON T.AMPERITY_ID=L.AMP_ID

		LEFT JOIN CUSTSEG C
		ON C.AMPERITY_ID=T.AMPERITY_ID

		--LEFT JOIN CALENDER CA
		--ON CA.DAY_NAME = T.ORDER_DATETIME

		GROUP BY T.AMPERITY_ID, CUSTOMER_SEG, TIER_NAME, MONTH(T.ORDER_DATETIME);